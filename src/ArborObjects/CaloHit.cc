/*
 *
 * CaloHit.cc source template automatically generated by a class generator
 * Creation date : lun. mars 30 2015
 *
 * This file is part of ArborContent libraries.
 * 
 * ArborContent is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborContent is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborContent.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#include "ArborObjects/CaloHit.h"

namespace arbor_content
{

CaloHit::CaloHit(const PandoraApi::CaloHit::Parameters &parameters) :
		pandora::CaloHit(parameters),
		m_caloHitMetaData(this)
{
	ClearTagMap();
}

//------------------------------------------------------------------------------------------------------------------------------------------

// TODO copy the connector list in the new calo hit
CaloHit::CaloHit(const PandoraContentApi::CaloHitFragment::Parameters &parameters) :
		pandora::CaloHit(parameters),
		m_caloHitMetaData(this)

{
	const CaloHit *const pCaloHitCopy = dynamic_cast<const CaloHit *const>(parameters.m_pOriginalCaloHit);

	if(NULL == pCaloHitCopy)
		throw pandora::StatusCodeException(pandora::STATUS_CODE_FAILURE);

	m_hitTagMap = pCaloHitCopy->m_hitTagMap;
}

//------------------------------------------------------------------------------------------------------------------------------------------

CaloHit::~CaloHit()
{
	PANDORA_THROW_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, ArborContentApi::RemoveAndDeleteAllConnections(this));
}

//------------------------------------------------------------------------------------------------------------------------------------------

void CaloHit::ClearTagMap()
{
	m_hitTagMap[CORE_HIT] = false;
	m_hitTagMap[ISOLATED_HIT] = false;
	m_hitTagMap[MIP_HIT] = false;
	m_hitTagMap[NOISE_HIT] = false;
}

//------------------------------------------------------------------------------------------------------------------------------------------

} 

