  /// \file ArborApi.cc
/*
 *
 * ArborApi.cc source template automatically generated by a class generator
 * Creation date : lun. mars 30 2015
 *
 * This file is part of ArborContent libraries.
 * 
 * ArborContent is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborContent is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborContent.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#include "ArborApi/ArborApi.h"
#include "ArborObjects/CaloHit.h"

namespace arbor_content
{

pandora::StatusCode CaloHitFactory::Create(const pandora::CaloHit *&pObject, const PandoraApi::CaloHit::Parameters &parameters) const
{
	pObject = NULL;
	const arbor_content::CaloHit *pArborCaloHit = NULL;

	try
	{
		pArborCaloHit = new arbor_content::CaloHit(parameters);

		if(NULL == pArborCaloHit)
			return pandora::STATUS_CODE_FAILURE;
	}
	catch(pandora::StatusCodeException &statusCodeException)
	{
		std::cout << "CaloHitFactory: failed to create a arbor_content::CaloHit object : " << statusCodeException.ToString() << std::endl;

		if(NULL != pArborCaloHit)
			delete pArborCaloHit;

		return statusCodeException.GetStatusCode();
	}

	pObject = pArborCaloHit;

	return pandora::STATUS_CODE_SUCCESS;
}

} 

