/// \file LoopingTrackAssociationAlgorithm.h
/*
 *
 * LoopingTrackAssociationAlgorithm.h header template automatically generated by a class generator
 * Creation date : mer. oct. 5 2016
 *
 * This file is part of ArborContent libraries.
 * 
 * ArborContent is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborContent is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborContent.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef LOOPINGTRACKASSOCIATIONALGORITHM_H
#define LOOPINGTRACKASSOCIATIONALGORITHM_H

#include "Pandora/Algorithm.h"
#include "Pandora/PandoraInternal.h"
#include "Pandora/PandoraInputTypes.h"

namespace arbor_content {

  /**
   * @brief LoopingTrackAssociationAlgorithm class
   */
  class LoopingTrackAssociationAlgorithm : public pandora::Algorithm
  {
  public:
    /**
     *  @brief  Factory class for instantiating algorithm
     */
    class Factory : public pandora::AlgorithmFactory
    {
    public:
      pandora::Algorithm *CreateAlgorithm() const;
    };

  private:
    pandora::StatusCode Run();
    pandora::StatusCode ReadSettings(const pandora::TiXmlHandle xmlHandle);

  private:
    float                       m_maxOmegaTrack;
    unsigned int                m_nClusterFitLayers;
    unsigned int                m_maxInnerClusterPseudoLayer;
    unsigned int                m_maxInnerClusterPseudoLayerInnerRegion;
    float                       m_maxXYDistanceFine;
    float                       m_maxXYDistanceCoarse;
    float                       m_minCosDirection;
  };

  //------------------------------------------------------------------------------------------------------------------------------------------

  inline pandora::Algorithm *LoopingTrackAssociationAlgorithm::Factory::CreateAlgorithm() const
  {
    return new LoopingTrackAssociationAlgorithm();
  }

} 

#endif  //  LOOPINGTRACKASSOCIATIONALGORITHM_H
