  /// \file SplitClusterAlgorithmTool.h
/*
 *
 * SplitClusterAlgorithmTool.h header template automatically generated by a class generator
 * Creation date : mar. avr. 7 2015
 *
 * This file is part of ArborContent libraries.
 * 
 * ArborContent is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborContent is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborContent.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef SPLITCLUSTERALGORITHMTOOL_H
#define SPLITCLUSTERALGORITHMTOOL_H

#include "Pandora/AlgorithmTool.h"
#include "Helpers/XmlHelper.h"
#include "Pandora/Algorithm.h"

namespace pandora { class Cluster; }

namespace arbor_content
{

class Connector;
class CaloHit;

/** 
 * @brief SplitClusterAlgorithmTool class
 */ 
class SplitClusterAlgorithmTool : public pandora::AlgorithmTool
{
public:
    /**
     *  @brief  Factory class for instantiating algorithm tool
     */
    class Factory : public pandora::AlgorithmToolFactory
    {
    public:
        pandora::AlgorithmTool *CreateAlgorithmTool() const;
    };

	/**
	 *  @brief  Split the cluster by removing a connector.
	 *  A new cluster is created from the end point of the deleted connector
	 *
	 *  @param  parentAlgorithm the parent algorithm to create the clusters
	 *  @param  pCluster the cluster split (will be deleted)
	 *  @param  pConnector the connector to delete from the cluster tree (will be deleted)
	 *  @param  pClusterFragment the fragment cluster address to receive
	 */
	pandora::StatusCode SplitCluster(const pandora::Algorithm &parentAlgorithm, const pandora::Cluster *const pCluster,
			const Connector *const pConnector, const pandora::Cluster *&pClusterFragment) const;

    /**
	 *  @brief  Read the algorithm settings
	 *
	 *  @param  xmlHandle the relevant xml handle
	 */
	pandora::StatusCode ReadSettings(const pandora::TiXmlHandle xmlHandle);
};

//------------------------------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------------------------------

inline pandora::AlgorithmTool *SplitClusterAlgorithmTool::Factory::CreateAlgorithmTool() const
{
	return new SplitClusterAlgorithmTool();
}

//------------------------------------------------------------------------------------------------------------------------------------------

inline pandora::StatusCode SplitClusterAlgorithmTool::ReadSettings(const pandora::TiXmlHandle /*xmlHandle*/)
{
	return pandora::STATUS_CODE_SUCCESS;
}

} 

#endif  //  SPLITCLUSTERALGORITHMTOOL_H
