  /// \file TreeStructureTool.h
/*
 *
 * TreeStructureTool.h header template automatically generated by a class generator
 * Creation date : ven. mai 20 2016
 *
 * This file is part of ArborContent libraries.
 * 
 * ArborContent is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborContent is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborContent.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef TREESTRUCTURETOOL_H
#define TREESTRUCTURETOOL_H

#include "Pandora/AlgorithmTool.h"

namespace arbor_content
{

/** 
 * @brief TreeStructureTool class
 */ 
class TreeStructureTool : public pandora::AlgorithmTool
{
public:
    /**
     *  @brief  Factory class for instantiating algorithm tool
     */
    class Factory : public pandora::AlgorithmToolFactory
    {
    public:
        pandora::AlgorithmTool *CreateAlgorithmTool() const;
    };

	/**
	 *  @brief  Read settings from the xml handle
	 *
	 *  @param  xmlHandle the xml handle to settings
	 */
	pandora::StatusCode ReadSettings(const pandora::TiXmlHandle xmlHandle);

	/**
	 *  @brief  Process the calo hit list.
	 *  Create simple tree structures with the calo hit list.
	 */
	pandora::StatusCode Process(const pandora::CaloHitList *const pCaloHitList);
};

//------------------------------------------------------------------------------------------------------------------------------------------

inline pandora::AlgorithmTool *TreeStructureTool::Factory::CreateAlgorithmTool() const
{
	return new TreeStructureTool();
}

} 

#endif  //  TREESTRUCTURETOOL_H
