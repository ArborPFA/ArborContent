  /// \file MuonReconstructionAlgorithm.h
/*
 *
 * MuonReconstructionAlgorithm.h header template automatically generated by a class generator
 * Creation date : jeu. mars 17 2016
 *
 * This file is part of ArborContent libraries.
 * 
 * ArborContent is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborContent is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborContent.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef MUONRECONSTRUCTIONALGORITHM_H
#define MUONRECONSTRUCTIONALGORITHM_H

#include "Pandora/Algorithm.h"
#include "Api/PandoraContentApi.h"

namespace arbor_content
{

/** 
 *  @brief  MuonReconstructionAlgorithm class
 */
class MuonReconstructionAlgorithm : public pandora::Algorithm
{
public:
    /**
     *  @brief  Factory class for instantiating algorithm
     */
    class Factory : public pandora::AlgorithmFactory
    {
    public:
        pandora::Algorithm *CreateAlgorithm() const;
    };

private:
    pandora::StatusCode Run();
    pandora::StatusCode ReadSettings(const pandora::TiXmlHandle xmlHandle);

    /**
     *  @brief  Prepare calo hit and track input lists for muon clustering
     */
    pandora::StatusCode PrepareForClustering();

    /**
     *  @brief  Filter input cluster list to find muon like clusters
     *
     *  @param  pMuonClusterList the input cluster list
     *  @param  filteredMuonClusterList the filtered muon cluster list
     */
    pandora::StatusCode FilterMuonClusterList(const pandora::ClusterList *const pMuonClusterList, pandora::ClusterList &filteredMuonClusterList);

    /**
     *  @brief  Remove all connections in the provided cluster list
     *
     *  @param  clusterList the cluster to remove connections
     */
    pandora::StatusCode RemoveClusterConnections(const pandora::ClusterList &clusterList);

    /**
     *  @brief  Create muon particle flow objects
     */
    pandora::StatusCode CreateMuonPfos(const pandora::ClusterList &muonClusterList);

    /**
     *  @brief  Tidy up lists
     */
    pandora::StatusCode TidyUpLists();

    /**
     *  @brief  Get the muon pfo components from current pfo list
     *
     *  @param  pfoCaloHitList the muon pfo calo hit list to receive
     *  @param  pfoTrackList the muon pfo track list to receive
     */
    pandora::StatusCode GetPfoComponents(pandora::CaloHitList &pfoCaloHitList, pandora::TrackList &pfoTrackList);

private:
    std::string                     m_inputCaloHitListName;
    std::string                     m_inputMuonCaloHitListName;
    std::string                     m_inputTrackListName;

    std::string                     m_caloHitClusteringListName;
    std::string                     m_trackClusteringListName;
    std::string                     m_clusteringAlgorithmName;
    std::string                     m_trackClusterAssociationAlgorithmName;

    std::string                     m_replacementCaloHitListName;
    std::string                     m_replacementTrackListName;

    std::string                     m_outputTrackListName;
    std::string                     m_outputCaloHitListName;
    std::string                     m_outputMuonCaloHitListName;
    std::string                     m_outputMuonClusterListName;
    std::string                     m_outputMuonPfoListName;

    bool                            m_replaceCurrentPfoList;
    bool                            m_replaceCurrentClusterList;

    float                           m_minMuonTrackMomentum;
};

//------------------------------------------------------------------------------------------------------------------------------------------

inline pandora::Algorithm *MuonReconstructionAlgorithm::Factory::CreateAlgorithm() const
{
    return new MuonReconstructionAlgorithm();
}

} 

#endif  //  MUONRECONSTRUCTIONALGORITHM_H
